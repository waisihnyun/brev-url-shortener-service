services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: brev-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: brev
      MYSQL_USER: brevuser
      MYSQL_PASSWORD: brevpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - brev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: brev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - brev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Application
  brev-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: brev-app
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/brev?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: brevuser
      SPRING_DATASOURCE_PASSWORD: brevpassword
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver

      # JPA/Hibernate configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_TIMEOUT: 2000ms
      REDIS_DATABASE: 0

      # Application specific configuration
      APP_CACHE_URL_MAPPING_TTL: 3600
      APP_BASE_URL: http://localhost:8080

      # Logging configuration
      LOGGING_LEVEL_ORG_EXAMPLE_BREV: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN
      LOGGING_LEVEL_COM_ZAXXER_HIKARI: WARN

      # Actuator configuration
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: when_authorized

      # JVM options
      JAVA_OPTS: "-Xmx768m -Xms512m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - brev-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: brev-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - brev-network
    profiles:
      - tools

  # Optional: phpMyAdmin for MySQL management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: brev-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: brevuser
      PMA_PASSWORD: brevpassword
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8082:80"
    depends_on:
      - mysql
    networks:
      - brev-network
    profiles:
      - tools

# Networks
networks:
  brev-network:
    driver: bridge
    name: brev-network

# Volumes for data persistence
volumes:
  mysql_data:
    name: brev-mysql-data
  redis_data:
    name: brev-redis-data
